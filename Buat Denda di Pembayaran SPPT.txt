CREATE FUNCTION denda() RETURNS TRIGGER AS $denda$
BEGIN
	UPDATE pembayaran_sppt SET denda_sppt = (
		SELECT
			CASE WHEN (sppt.tgl_jatuh_tempo_sppt <= now()::timestamp without time zone) THEN
				CASE
					WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) >= 24::double precision THEN round(24::double precision * 0.02 * sppt.pbb_yg_harus_dibayar_sppt::double precision)::double precision
					WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) >= 12::double precision THEN round((date_part('month'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt))+ 1 + 12::double precision) * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
					WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) < 12::double precision THEN round((date_part('month'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt))+ 1::double precision)  * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
					ELSE '0'::double precision
				END
			END
		FROM sppt
		WHERE
		 kd_propinsi = new.kd_propinsi AND
		 kd_dati2 = new.kd_dati2 AND
		 kd_kecamatan = new.kd_kecamatan AND
		 kd_kelurahan = new.kd_kelurahan AND
		 kd_blok = new.kd_blok AND
		 no_urut = new.no_urut AND
		 kd_jns_op = new.kd_jns_op AND
		 thn_pajak_sppt = new.thn_pajak_sppt AND
		 status_pembayaran_sppt = '0'
	) WHERE
	 kd_propinsi = new.kd_propinsi AND
   kd_dati2 = new.kd_dati2 AND
   kd_kecamatan = new.kd_kecamatan AND
   kd_kelurahan = new.kd_kelurahan AND
   kd_blok = new.kd_blok AND
   no_urut = new.no_urut AND
   kd_jns_op = new.kd_jns_op AND
	 thn_pajak_sppt = new.thn_pajak_sppt
;
RETURN NULL;
END;
$denda$ LANGUAGE plpgsql;

CREATE TRIGGER denda
AFTER INSERT ON pembayaran_sppt
FOR EACH ROW
EXECUTE PROCEDURE denda();



--Testing Denda
SELECT CASE WHEN (sppt.tgl_jatuh_tempo_sppt <= now()::timestamp without time zone) THEN
  CASE
		WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) >= 24::double precision THEN round(24::double precision * 0.02 * sppt.pbb_yg_harus_dibayar_sppt::double precision)::double precision
		WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) >= 12::double precision THEN round((date_part('month'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt))+ 1 + 12::double precision) * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
		WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) < 12::double precision THEN round((date_part('month'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt))+ 1::double precision)  * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
		ELSE '0'::double precision
  END
END as denda_sppt
FROM sppt
WHERE
	 kd_propinsi = '82' AND
   kd_dati2 = '07' AND
   kd_kecamatan = '040' AND
   kd_kelurahan = '001' AND
   kd_blok = '001' AND
   no_urut = '0002' AND
   kd_jns_op = '0' AND
	 thn_pajak_sppt = '2012' AND
	 status_pembayaran_sppt = '0';
	 
--Testing Update Denda
UPDATE pembayaran_sppt SET denda_sppt = (
		SELECT
	CASE WHEN (sppt.tgl_jatuh_tempo_sppt <= now()::timestamp without time zone) THEN
  CASE
		WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) >= 24::double precision THEN round(24::double precision * 0.02 * sppt.pbb_yg_harus_dibayar_sppt::double precision)::double precision
		WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) >= 12::double precision THEN round((date_part('month'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt))+ 1 + 12::double precision) * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
		WHEN (date_part('year'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt)) * 12::double precision) < 12::double precision THEN round((date_part('month'::text, age(now()::timestamp without time zone, sppt.tgl_jatuh_tempo_sppt))+ 1::double precision)  * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
		ELSE '0'::double precision
  END
		END
		FROM sppt
			WHERE
	 kd_propinsi = '82' AND
   kd_dati2 = '07' AND
   kd_kecamatan = '040' AND
   kd_kelurahan = '001' AND
   kd_blok = '001' AND
   no_urut = '0002' AND
   kd_jns_op = '0' AND
	 thn_pajak_sppt = '2017' AND
	 status_pembayaran_sppt = '1')
WHERE
	 kd_propinsi = '82' AND
   kd_dati2 = '07' AND
   kd_kecamatan = '040' AND
   kd_kelurahan = '001' AND
   kd_blok = '001' AND
   no_urut = '0002' AND
   kd_jns_op = '0' AND
	 thn_pajak_sppt = '2017'
;

-- update set denda pada pembayaran SPPT (untuk tahu pembayaran jatuh tempo)
CREATE FUNCTION denda() RETURNS TRIGGER AS $denda$
BEGIN
	UPDATE pembayaran_sppt SET denda_sppt = (
	SELECT
		CASE WHEN (psppt.tgl_pembayaran_sppt <= sppt.tgl_jatuh_tempo_sppt::timestamp without time zone) THEN
				CASE
					WHEN (date_part('year'::text, age(sppt.tgl_jatuh_tempo_sppt::timestamp without time zone, psppt.tgl_pembayaran_sppt)) * 12::double precision) >= 24::double precision THEN round(24::double precision * 0.02 * sppt.pbb_yg_harus_dibayar_sppt::double precision)::double precision
					WHEN (date_part('year'::text, age(sppt.tgl_jatuh_tempo_sppt::timestamp without time zone, psppt.tgl_pembayaran_sppt)) * 12::double precision) >= 12::double precision THEN round((date_part('month'::text, age(sppt.tgl_jatuh_tempo_sppt::timestamp without time zone, psppt.tgl_pembayaran_sppt))+ 1 + 12::double precision) * 0.02::double precision * sppt.pbb_yg_harus_dibayar_sppt::double precision)
					ELSE '0'::double precision
				END
		END
	FROM sppt sppt
	INNER JOIN pembayaran_sppt psppt ON
				sppt.kd_propinsi = psppt.kd_propinsi AND
				sppt.kd_dati2 = psppt.kd_dati2 AND
				sppt.kd_kecamatan = psppt.kd_kecamatan AND
				sppt.kd_kelurahan = psppt.kd_kelurahan AND
				sppt.kd_blok = psppt.kd_blok AND
				sppt.no_urut = psppt.no_urut AND
				sppt.kd_jns_op = psppt.kd_jns_op AND
				sppt.thn_pajak_sppt = psppt.thn_pajak_sppt
	WHERE
			 sppt.kd_propinsi = new.kd_propinsi AND
			 sppt.kd_dati2 = new.kd_dati2 AND
			 sppt.kd_kecamatan = new.kd_kecamatan AND
			 sppt.kd_kelurahan = new.kd_kelurahan AND
			 sppt.kd_blok = new.kd_blok AND
			 sppt.no_urut = new.no_urut AND
			 sppt.kd_jns_op = new.kd_jns_op AND
			 sppt.thn_pajak_sppt = new.thn_pajak_sppt AND
			 sppt.status_pembayaran_sppt = '0'
	)
	WHERE
		kd_propinsi = new.kd_propinsi AND
		kd_dati2 = new.kd_dati2 AND
		kd_kecamatan = new.kd_kecamatan AND
		kd_kelurahan = new.kd_kelurahan AND
		kd_blok = new.kd_blok AND
		no_urut = new.no_urut AND
		kd_jns_op = new.kd_jns_op AND
		thn_pajak_sppt = new.thn_pajak_sppt
;
RETURN NULL;
END;
$denda$ LANGUAGE plpgsql;

CREATE TRIGGER denda
AFTER INSERT ON pembayaran_sppt
FOR EACH ROW
EXECUTE PROCEDURE denda();


--Untuk testing argumen
SELECT
	CASE WHEN
	'2017-09-06' <= '2017-11-30' THEN 'True'
ELSE 'False'
		END
;




-- Rumus Baru Denda
CREATE FUNCTION denda() RETURNS TRIGGER AS $denda$
BEGIN
	UPDATE pembayaran_sppt SET denda_sppt = (
	SELECT
		CASE
			WHEN floor(extract(month from age(psppt.tgl_pembayaran_sppt, sppt.tgl_jatuh_tempo_sppt))) > 24 then round(24 * 0.02 * sppt.pbb_yg_harus_dibayar_sppt)
			WHEN floor(extract(month from age(psppt.tgl_pembayaran_sppt, sppt.tgl_jatuh_tempo_sppt))) >= 1 then round(floor(extract(month from age(psppt.tgl_pembayaran_sppt, sppt.tgl_jatuh_tempo_sppt))) * 0.02 * sppt.pbb_yg_harus_dibayar_sppt)
			ELSE '0'::double precision
		END
	FROM sppt sppt
	INNER JOIN pembayaran_sppt psppt ON
				sppt.kd_propinsi = psppt.kd_propinsi AND
				sppt.kd_dati2 = psppt.kd_dati2 AND
				sppt.kd_kecamatan = psppt.kd_kecamatan AND
				sppt.kd_kelurahan = psppt.kd_kelurahan AND
				sppt.kd_blok = psppt.kd_blok AND
				sppt.no_urut = psppt.no_urut AND
				sppt.kd_jns_op = psppt.kd_jns_op AND
				sppt.thn_pajak_sppt = psppt.thn_pajak_sppt
	WHERE
			 sppt.kd_propinsi = new.kd_propinsi AND
			 sppt.kd_dati2 = new.kd_dati2 AND
			 sppt.kd_kecamatan = new.kd_kecamatan AND
			 sppt.kd_kelurahan = new.kd_kelurahan AND
			 sppt.kd_blok = new.kd_blok AND
			 sppt.no_urut = new.no_urut AND
			 sppt.kd_jns_op = new.kd_jns_op AND
			 sppt.thn_pajak_sppt = new.thn_pajak_sppt AND
			 sppt.status_pembayaran_sppt = '0'
	)
	WHERE
		kd_propinsi = new.kd_propinsi AND
		kd_dati2 = new.kd_dati2 AND
		kd_kecamatan = new.kd_kecamatan AND
		kd_kelurahan = new.kd_kelurahan AND
		kd_blok = new.kd_blok AND
		no_urut = new.no_urut AND
		kd_jns_op = new.kd_jns_op AND
		thn_pajak_sppt = new.thn_pajak_sppt
;
RETURN NULL;
END;
$denda$ LANGUAGE plpgsql;

CREATE TRIGGER denda
AFTER INSERT ON pembayaran_sppt
FOR EACH ROW
EXECUTE PROCEDURE denda();

/*
SELECT tgl_jatuh_tempo_sppt, count(*) as jumlah_jatuh_tempo FROM sppt
WHERE thn_pajak_sppt ='2017' AND status_pembayaran_sppt = '0'
GROUP BY  tgl_jatuh_tempo_sppt
ORDER BY  tgl_jatuh_tempo_sppt ASC
;
*/

SELECT 50000 as pokok,
		CASE
			WHEN floor(extract(MONTH from age('2017-10-16', '2017-06-05'))) > 24 then round(24 * 0.02 * 50000)
			WHEN floor(extract(MONTH from age('2017-10-16', '2017-06-05'))) >= 1 then round(floor(extract(MONTH from age('2017-10-16', '2017-06-05'))) * 0.02 * 50000)
			ELSE '0'::double precision
		END as denda;

SELECT extract(MONTH from age('2017-10-16','2017-06-05'));




-- Rumus Perhitungan denda baru, dimana lewat dari sehari dihitung denda sebesar 2% per bulan
SELECT 50000 as pokok,
		CASE
			WHEN extract(MONTH from age('2017-06-10', '2017-06-05')) > 23 then round(24 * 0.02 * 50000)
			WHEN extract(MONTH from age('2017-06-10', '2017-06-05')) >= 0 then
        CASE
          WHEN extract(MONTH from age('2017-06-10', '2017-06-05')) >= floor(extract(MONTH from age('2017-06-10', '2017-06-05'))) THEN
            round(floor(extract(MONTH from age('2017-06-10', '2017-06-05')))+ 1 * (0.02 * 50000))
          ELSE round(floor(extract(MONTH from age('2017-06-10', '2017-06-05'))) * (0.02 * 50000))
            END
      ELSE 0
		END as denda,
50000 + (CASE
			WHEN extract(MONTH from age('2017-06-10', '2017-06-05')) > 23 then round(24 * 0.02 * 50000)
			WHEN extract(MONTH from age('2017-06-10', '2017-06-05')) >= 0 then
        CASE
          WHEN extract(MONTH from age('2017-06-10', '2017-06-05')) >= floor(extract(MONTH from age('2017-06-10', '2017-06-05'))) THEN
            round(floor(extract(MONTH from age('2017-06-10', '2017-06-05')))+ 1 * (0.02 * 50000))
          ELSE round(floor(extract(MONTH from age('2017-06-10', '2017-06-05'))) * (0.02 * 50000))
            END
      ELSE 0
		END) as jumlah_tunggakan
;

SELECT round(floor(extract(MONTH from age('2017-06-06','2017-06-05')))) + 1 * (0.02 * 50000)  as jumlah_bulan;
select floor(extract(MONTH from age('2017-06-06', '2017-06-05')));
select round(floor(extract(MONTH from age('2017-06-06', '2017-06-05')))+ 1 * (0.02 * 50000)) ;
SELECT 4 * 0.02 * 50000;




--RUMUS DENDA BARU
-- Jika Denda Berlaku setelah 1 bulan
SELECT 50000 as pokok,
  CASE
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
          > 23 THEN round(24 * 0.02 * 50000)
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
         >= 0 THEN
      CASE
        WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
             > floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04')))
          THEN
          round(floor((extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) + 1) * 0.02 * 50000)
        else round(floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) * 0.02 * 50000)
        END
      else 0
      END as denda,
  50000 + (CASE
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
          > 23 THEN round(24 * 0.02 * 50000)
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
         >= 0 THEN
      CASE
        WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
             > floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04')))
          THEN
          round(floor((extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) + 1) * 0.02 * 50000)
        else round(floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) * 0.02 * 50000)
        END
      else 0
      END) as jumlah_tunggakan
;

--Jika Denda Berlaku setelah 1 hari, begitu ganti bulan baru kena denda lagi
SELECT 50000 as pokok,
  CASE
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
          > 23 THEN round(24 * 0.02 * 50000)
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
         >= 0 THEN
      CASE
        WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
             >= floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04')))
          THEN
          round(floor((extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) + 1) * 0.02 * 50000)
        else round(floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) * 0.02 * 50000)
        END
      else 0
      END as denda,
  50000 + (CASE
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
          > 23 THEN round(24 * 0.02 * 50000)
    WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
         >= 0 THEN
      CASE
        WHEN extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))
             >= floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04')))
          THEN
          round(floor((extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) + 1) * 0.02 * 50000)
        else round(floor(extract(year from age('2017-05-05', '2017-05-04')) * 12 + extract(month from age('2017-05-05', '2017-05-04'))) * 0.02 * 50000)
        END
      else 0
      END) as jumlah_tunggakan
;